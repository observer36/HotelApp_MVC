// <auto-generated />
using System;
using HotelApp.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelApp.DAL.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20201210140832_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HotelApp.DAL.Entities.ActiveOrder", b =>
                {
                    b.Property<int>("ActiveOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRegistration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("HotelRoomId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActiveOrderId");

                    b.HasIndex("ClientId");

                    b.HasIndex("HotelRoomId");

                    b.ToTable("ActiveOrders");
                });

            modelBuilder.Entity("HotelApp.DAL.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("HotelApp.DAL.Entities.HotelRoom", b =>
                {
                    b.Property<int>("HotelRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypeComfortId")
                        .HasColumnType("int");

                    b.Property<int>("TypeSizeId")
                        .HasColumnType("int");

                    b.HasKey("HotelRoomId");

                    b.HasIndex("TypeComfortId");

                    b.HasIndex("TypeSizeId");

                    b.ToTable("HotelRooms");

                    b.HasData(
                        new
                        {
                            HotelRoomId = 1,
                            Number = "10",
                            PricePerDay = 100m,
                            TypeComfortId = 1,
                            TypeSizeId = 1
                        },
                        new
                        {
                            HotelRoomId = 2,
                            Number = "11",
                            PricePerDay = 100m,
                            TypeComfortId = 1,
                            TypeSizeId = 1
                        },
                        new
                        {
                            HotelRoomId = 3,
                            Number = "12",
                            PricePerDay = 200m,
                            TypeComfortId = 2,
                            TypeSizeId = 1
                        },
                        new
                        {
                            HotelRoomId = 4,
                            Number = "13",
                            PricePerDay = 200m,
                            TypeComfortId = 2,
                            TypeSizeId = 2
                        },
                        new
                        {
                            HotelRoomId = 5,
                            Number = "20",
                            PricePerDay = 250m,
                            TypeComfortId = 2,
                            TypeSizeId = 3
                        },
                        new
                        {
                            HotelRoomId = 6,
                            Number = "21",
                            PricePerDay = 250m,
                            TypeComfortId = 2,
                            TypeSizeId = 5
                        },
                        new
                        {
                            HotelRoomId = 7,
                            Number = "22",
                            PricePerDay = 300m,
                            TypeComfortId = 3,
                            TypeSizeId = 1
                        },
                        new
                        {
                            HotelRoomId = 8,
                            Number = "30",
                            PricePerDay = 400m,
                            TypeComfortId = 3,
                            TypeSizeId = 2
                        },
                        new
                        {
                            HotelRoomId = 9,
                            Number = "31",
                            PricePerDay = 400m,
                            TypeComfortId = 4,
                            TypeSizeId = 3
                        },
                        new
                        {
                            HotelRoomId = 10,
                            Number = "40",
                            PricePerDay = 600m,
                            TypeComfortId = 5,
                            TypeSizeId = 6
                        },
                        new
                        {
                            HotelRoomId = 11,
                            Number = "50",
                            PricePerDay = 800m,
                            TypeComfortId = 6,
                            TypeSizeId = 2
                        });
                });

            modelBuilder.Entity("HotelApp.DAL.Entities.TypeComfort", b =>
                {
                    b.Property<int>("TypeComfortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Comfort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeComfortId");

                    b.ToTable("TypeComfort");

                    b.HasData(
                        new
                        {
                            TypeComfortId = 1,
                            Comfort = "Standart"
                        },
                        new
                        {
                            TypeComfortId = 2,
                            Comfort = "Suite"
                        },
                        new
                        {
                            TypeComfortId = 3,
                            Comfort = "De_Luxe"
                        },
                        new
                        {
                            TypeComfortId = 4,
                            Comfort = "Duplex"
                        },
                        new
                        {
                            TypeComfortId = 5,
                            Comfort = "Family_Room"
                        },
                        new
                        {
                            TypeComfortId = 6,
                            Comfort = "Honeymoon_Room"
                        });
                });

            modelBuilder.Entity("HotelApp.DAL.Entities.TypeSize", b =>
                {
                    b.Property<int>("TypeSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeSizeId");

                    b.ToTable("TypeSize");

                    b.HasData(
                        new
                        {
                            TypeSizeId = 1,
                            Size = "SGL"
                        },
                        new
                        {
                            TypeSizeId = 2,
                            Size = "DBL"
                        },
                        new
                        {
                            TypeSizeId = 3,
                            Size = "DBL_TWN"
                        },
                        new
                        {
                            TypeSizeId = 4,
                            Size = "TRPL"
                        },
                        new
                        {
                            TypeSizeId = 5,
                            Size = "DBL_EXB"
                        },
                        new
                        {
                            TypeSizeId = 6,
                            Size = "TRPL_EXB"
                        });
                });

            modelBuilder.Entity("HotelApp.DAL.Entities.ActiveOrder", b =>
                {
                    b.HasOne("HotelApp.DAL.Entities.Client", "Client")
                        .WithMany("ActiveOrders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelApp.DAL.Entities.HotelRoom", "HotelRoom")
                        .WithMany("ActiveOrders")
                        .HasForeignKey("HotelRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("HotelRoom");
                });

            modelBuilder.Entity("HotelApp.DAL.Entities.HotelRoom", b =>
                {
                    b.HasOne("HotelApp.DAL.Entities.TypeComfort", "TypeComfort")
                        .WithMany()
                        .HasForeignKey("TypeComfortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelApp.DAL.Entities.TypeSize", "TypeSize")
                        .WithMany()
                        .HasForeignKey("TypeSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeComfort");

                    b.Navigation("TypeSize");
                });

            modelBuilder.Entity("HotelApp.DAL.Entities.Client", b =>
                {
                    b.Navigation("ActiveOrders");
                });

            modelBuilder.Entity("HotelApp.DAL.Entities.HotelRoom", b =>
                {
                    b.Navigation("ActiveOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
